import { useEffect, useState } from 'react'
import { useAuth } from '../contexts/AuthContext'
import { Link } from 'react-router-dom'
import { Activity, TrendingUp, Calendar, Award, Dumbbell } from 'lucide-react'
import { useWorkouts } from '../hooks/useWorkouts'
import Lightning from '../components/Lightning'

const Dashboard = () => {
  const { user } = useAuth()
  const { workouts, fetchRecentWorkouts, loading } = useWorkouts()
  const [totalWorkouts, setTotalWorkouts] = useState(0)
  const [monthWorkouts, setMonthWorkouts] = useState(0)

  useEffect(() => {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏–∑ API
    fetchRecentWorkouts(1) // –ø–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω—é—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É
  }, [])

  useEffect(() => {
    if (workouts.length > 0) {
      // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      setTotalWorkouts(workouts.length)
      
      // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü
      const currentMonth = new Date().getMonth()
      const currentYear = new Date().getFullYear()
      const monthCount = workouts.filter(w => {
        const workoutDate = new Date(w.date)
        return workoutDate.getMonth() === currentMonth && 
               workoutDate.getFullYear() === currentYear
      }).length
      setMonthWorkouts(monthCount)
    }
  }, [workouts])

  const stats = [
    { label: '–í—Å–µ–≥–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫', value: totalWorkouts.toString(), icon: Activity, color: 'from-blue-500 to-blue-600' },
    { label: '–≠—Ç–æ—Ç –º–µ—Å—è—Ü', value: monthWorkouts.toString(), icon: Calendar, color: 'from-purple-500 to-purple-600' },
    { label: '–ü—Ä–æ–≥—Ä–µ—Å—Å', value: '0%', icon: TrendingUp, color: 'from-green-500 to-green-600' },
    { label: '–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è', value: '0', icon: Award, color: 'from-orange-500 to-orange-600' },
  ]

  const muscleGroupNames: Record<string, string> = {
    chest: '–ì—Ä—É–¥—å',
    back: '–°–ø–∏–Ω–∞ –∏ –ø–ª–µ—á–∏',
    arms: '–†—É–∫–∏',
    legs: '–ù–æ–≥–∏'
  }

  const muscleGroupEmojis: Record<string, string> = {
    chest: 'üí™',
    back: 'üî•',
    arms: 'üí™',
    legs: 'ü¶µ'
  }

  // –ü–æ—Å–ª–µ–¥–Ω—è—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ - —ç—Ç–æ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞
  const recentWorkout = workouts.length > 0 ? workouts[0] : null

  return (
    <div className="min-h-screen bg-dark-bg py-8">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* Welcome Section */}
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-white mb-2">
            –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user?.name}! üëã
          </h1>
          <p className="text-gray-400">
            –ì–æ—Ç–æ–≤—ã –∫ –Ω–æ–≤—ã–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º? –ù–∞—á–Ω–∏—Ç–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!
          </p>
        </div>

        {/* Stats Grid */}
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
          {stats.map((stat) => {
            const Icon = stat.icon
            return (
              <div key={stat.label} className="stat-card">
                <div className="flex items-center justify-between">
                  <div>
                    <p className="text-gray-400 text-sm mb-1">{stat.label}</p>
                    <p className="text-3xl font-bold text-white">{stat.value}</p>
                  </div>
                  <div className={`w-14 h-14 rounded-xl bg-gradient-to-br ${stat.color} flex items-center justify-center`}>
                    <Icon className="text-white" size={28} />
                  </div>
                </div>
              </div>
            )
          })}
        </div>

        {/* Quick Actions & Recent Activity */}
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="card">
            <h2 className="text-xl font-bold text-white mb-4">–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h2>
            <div className="space-y-3">
              <Link to="/workouts" className="block p-4 bg-dark-bg rounded-lg hover:bg-slate-800 transition-colors">
                <p className="font-semibold text-white">–ù–∞—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É</p>
                <p className="text-sm text-gray-400">–ó–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É</p>
              </Link>
              <Link to="/programs" className="block p-4 bg-dark-bg rounded-lg hover:bg-slate-800 transition-colors">
                <p className="font-semibold text-white">–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É</p>
                <p className="text-sm text-gray-400">–ü–æ—Å—Ç—Ä–æ–π—Ç–µ –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫</p>
              </Link>
              <Link to="/nutrition" className="block p-4 bg-dark-bg rounded-lg hover:bg-slate-800 transition-colors">
                <p className="font-semibold text-white">–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–µ–º –ø–∏—â–∏</p>
                <p className="text-sm text-gray-400">–¢—Ä–µ–∫–∏–Ω–≥ –∫–∞–ª–æ—Ä–∏–π –∏ –º–∞–∫—Ä–æ—Å–æ–≤</p>
              </Link>
            </div>
          </div>

          <div className="card">
            <h2 className="text-xl font-bold text-white mb-4">–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h2>
            {loading ? (
              <div className="text-center py-12 text-gray-400">
                <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>
              </div>
            ) : recentWorkout ? (
              <div className="bg-dark-bg rounded-lg p-5">
                <div className="flex items-start justify-between mb-3">
                  <div className="flex items-center gap-3">
                    <div className="text-3xl">
                      {muscleGroupEmojis[recentWorkout.muscleGroup] || 'üí™'}
                    </div>
                    <div>
                      <h3 className="text-lg font-bold text-white">
                        {muscleGroupNames[recentWorkout.muscleGroup] || recentWorkout.muscleGroup}
                      </h3>
                      <div className="flex items-center text-gray-400 text-sm space-x-3">
                        <div className="flex items-center">
                          <Calendar size={14} className="mr-1" />
                          {new Date(recentWorkout.date).toLocaleDateString('ru-RU')}
                        </div>
                        <span>{recentWorkout.dayOfWeek}</span>
                      </div>
                    </div>
                  </div>
                </div>
                
                <div className="space-y-2 mt-4">
                  <p className="text-sm text-gray-400 mb-2">–£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:</p>
                  {recentWorkout.exercises.slice(0, 3).map((exercise, idx) => (
                    <div key={idx} className="flex items-center justify-between text-sm bg-slate-800/50 rounded px-3 py-2">
                      <span className="text-gray-300">{exercise.name}</span>
                      <span className="text-primary-400 font-semibold">{exercise.sets} –ø–æ–¥—Ö–æ–¥–æ–≤</span>
                    </div>
                  ))}
                  {recentWorkout.exercises.length > 3 && (
                    <p className="text-xs text-gray-500 text-center mt-2">
                      +{recentWorkout.exercises.length - 3} —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
                    </p>
                  )}
                </div>

                <Link 
                  to="/workouts" 
                  className="mt-4 block text-center text-primary-400 hover:text-primary-300 text-sm font-semibold transition-colors"
                >
                  –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ ‚Üí
                </Link>
              </div>
            ) : (
              <div className="text-center py-12 text-gray-400">
                <Dumbbell size={48} className="mx-auto mb-4 opacity-50" />
                <p>–ü–æ–∫–∞ –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π</p>
                <p className="text-sm mt-2">–ù–∞—á–Ω–∏—Ç–µ —Å–≤–æ—é –ø–µ—Ä–≤—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É!</p>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  )
}

export default Dashboard